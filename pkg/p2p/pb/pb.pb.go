// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: .proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file___proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file___proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file___proto_rawDescGZIP(), []int{0}
}

type Transaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        []byte                 `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver      []byte                 `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature     []byte                 `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	PublicKey     []byte                 `protobuf:"bytes,6,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file___proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file___proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file___proto_rawDescGZIP(), []int{1}
}

func (x *Transaction) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Transaction) GetReceiver() []byte {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *Transaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Transaction) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type Block struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Transactions      []*Transaction         `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	MerkleRootHash    []byte                 `protobuf:"bytes,2,opt,name=merkle_root_hash,json=merkleRootHash,proto3" json:"merkle_root_hash,omitempty"`
	PreviousBlockHash []byte                 `protobuf:"bytes,3,opt,name=previous_block_hash,json=previousBlockHash,proto3" json:"previous_block_hash,omitempty"`
	CurrentBlockHash  []byte                 `protobuf:"bytes,4,opt,name=current_block_hash,json=currentBlockHash,proto3" json:"current_block_hash,omitempty"`
	Height            uint64                 `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file___proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file___proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file___proto_rawDescGZIP(), []int{2}
}

func (x *Block) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Block) GetMerkleRootHash() []byte {
	if x != nil {
		return x.MerkleRootHash
	}
	return nil
}

func (x *Block) GetPreviousBlockHash() []byte {
	if x != nil {
		return x.PreviousBlockHash
	}
	return nil
}

func (x *Block) GetCurrentBlockHash() []byte {
	if x != nil {
		return x.CurrentBlockHash
	}
	return nil
}

func (x *Block) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type AVote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Approve       bool                   `protobuf:"varint,1,opt,name=approve,proto3" json:"approve,omitempty"`
	NodeId        string                 `protobuf:"bytes,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	BlockHeight   uint64                 `protobuf:"varint,3,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AVote) Reset() {
	*x = AVote{}
	mi := &file___proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AVote) ProtoMessage() {}

func (x *AVote) ProtoReflect() protoreflect.Message {
	mi := &file___proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AVote.ProtoReflect.Descriptor instead.
func (*AVote) Descriptor() ([]byte, []int) {
	return file___proto_rawDescGZIP(), []int{3}
}

func (x *AVote) GetApprove() bool {
	if x != nil {
		return x.Approve
	}
	return false
}

func (x *AVote) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *AVote) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type BlockHeight struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Height        uint64                 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockHeight) Reset() {
	*x = BlockHeight{}
	mi := &file___proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockHeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeight) ProtoMessage() {}

func (x *BlockHeight) ProtoReflect() protoreflect.Message {
	mi := &file___proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeight.ProtoReflect.Descriptor instead.
func (*BlockHeight) Descriptor() ([]byte, []int) {
	return file___proto_rawDescGZIP(), []int{4}
}

func (x *BlockHeight) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type SteamNodeInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	NodeStatus    string                 `protobuf:"bytes,2,opt,name=nodeStatus,proto3" json:"nodeStatus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SteamNodeInfoResponse) Reset() {
	*x = SteamNodeInfoResponse{}
	mi := &file___proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SteamNodeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SteamNodeInfoResponse) ProtoMessage() {}

func (x *SteamNodeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file___proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SteamNodeInfoResponse.ProtoReflect.Descriptor instead.
func (*SteamNodeInfoResponse) Descriptor() ([]byte, []int) {
	return file___proto_rawDescGZIP(), []int{5}
}

func (x *SteamNodeInfoResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SteamNodeInfoResponse) GetNodeStatus() string {
	if x != nil {
		return x.NodeStatus
	}
	return ""
}

var File___proto protoreflect.FileDescriptor

const file___proto_rawDesc = "" +
	"\n" +
	"\x06.proto\x12\x02pb\"\a\n" +
	"\x05Empty\"\xb3\x01\n" +
	"\vTransaction\x12\x16\n" +
	"\x06sender\x18\x01 \x01(\fR\x06sender\x12\x1a\n" +
	"\breceiver\x18\x02 \x01(\fR\breceiver\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x1c\n" +
	"\tsignature\x18\x05 \x01(\fR\tsignature\x12\x1c\n" +
	"\tpublicKey\x18\x06 \x01(\fR\tpublicKey\"\xdc\x01\n" +
	"\x05Block\x123\n" +
	"\ftransactions\x18\x01 \x03(\v2\x0f.pb.TransactionR\ftransactions\x12(\n" +
	"\x10merkle_root_hash\x18\x02 \x01(\fR\x0emerkleRootHash\x12.\n" +
	"\x13previous_block_hash\x18\x03 \x01(\fR\x11previousBlockHash\x12,\n" +
	"\x12current_block_hash\x18\x04 \x01(\fR\x10currentBlockHash\x12\x16\n" +
	"\x06height\x18\x05 \x01(\x04R\x06height\"[\n" +
	"\x05AVote\x12\x18\n" +
	"\aapprove\x18\x01 \x01(\bR\aapprove\x12\x16\n" +
	"\x06nodeId\x18\x02 \x01(\tR\x06nodeId\x12 \n" +
	"\vblockHeight\x18\x03 \x01(\x04R\vblockHeight\"%\n" +
	"\vBlockHeight\x12\x16\n" +
	"\x06height\x18\x01 \x01(\x04R\x06height\"O\n" +
	"\x15SteamNodeInfoResponse\x12\x16\n" +
	"\x06nodeId\x18\x01 \x01(\tR\x06nodeId\x12\x1e\n" +
	"\n" +
	"nodeStatus\x18\x02 \x01(\tR\n" +
	"nodeStatus2\xae\x02\n" +
	"\n" +
	"Blockchain\x12-\n" +
	"\x0fSendTransaction\x12\x0f.pb.Transaction\x1a\t.pb.Empty\x12$\n" +
	"\fProposeBlock\x12\t.pb.Block\x1a\t.pb.Empty\x12\x1c\n" +
	"\x04Vote\x12\t.pb.AVote\x1a\t.pb.Empty\x12&\n" +
	"\bGetBlock\x12\x0f.pb.BlockHeight\x1a\t.pb.Block\x12&\n" +
	"\x0eGetLatestBlock\x12\t.pb.Empty\x1a\t.pb.Block\x12#\n" +
	"\vCommitBlock\x12\t.pb.Empty\x1a\t.pb.Empty\x128\n" +
	"\x0eStreamNodeInfo\x12\t.pb.Empty\x1a\x19.pb.SteamNodeInfoResponse0\x01B\x11Z\x0f./pkg/p2p/pb/pbb\x06proto3"

var (
	file___proto_rawDescOnce sync.Once
	file___proto_rawDescData []byte
)

func file___proto_rawDescGZIP() []byte {
	file___proto_rawDescOnce.Do(func() {
		file___proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file___proto_rawDesc), len(file___proto_rawDesc)))
	})
	return file___proto_rawDescData
}

var file___proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file___proto_goTypes = []any{
	(*Empty)(nil),                 // 0: pb.Empty
	(*Transaction)(nil),           // 1: pb.Transaction
	(*Block)(nil),                 // 2: pb.Block
	(*AVote)(nil),                 // 3: pb.AVote
	(*BlockHeight)(nil),           // 4: pb.BlockHeight
	(*SteamNodeInfoResponse)(nil), // 5: pb.SteamNodeInfoResponse
}
var file___proto_depIdxs = []int32{
	1, // 0: pb.Block.transactions:type_name -> pb.Transaction
	1, // 1: pb.Blockchain.SendTransaction:input_type -> pb.Transaction
	2, // 2: pb.Blockchain.ProposeBlock:input_type -> pb.Block
	3, // 3: pb.Blockchain.Vote:input_type -> pb.AVote
	4, // 4: pb.Blockchain.GetBlock:input_type -> pb.BlockHeight
	0, // 5: pb.Blockchain.GetLatestBlock:input_type -> pb.Empty
	0, // 6: pb.Blockchain.CommitBlock:input_type -> pb.Empty
	0, // 7: pb.Blockchain.StreamNodeInfo:input_type -> pb.Empty
	0, // 8: pb.Blockchain.SendTransaction:output_type -> pb.Empty
	0, // 9: pb.Blockchain.ProposeBlock:output_type -> pb.Empty
	0, // 10: pb.Blockchain.Vote:output_type -> pb.Empty
	2, // 11: pb.Blockchain.GetBlock:output_type -> pb.Block
	2, // 12: pb.Blockchain.GetLatestBlock:output_type -> pb.Block
	0, // 13: pb.Blockchain.CommitBlock:output_type -> pb.Empty
	5, // 14: pb.Blockchain.StreamNodeInfo:output_type -> pb.SteamNodeInfoResponse
	8, // [8:15] is the sub-list for method output_type
	1, // [1:8] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file___proto_init() }
func file___proto_init() {
	if File___proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file___proto_rawDesc), len(file___proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file___proto_goTypes,
		DependencyIndexes: file___proto_depIdxs,
		MessageInfos:      file___proto_msgTypes,
	}.Build()
	File___proto = out.File
	file___proto_goTypes = nil
	file___proto_depIdxs = nil
}
